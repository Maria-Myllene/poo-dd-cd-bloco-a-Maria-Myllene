{
    "patches": [
        {
            "label": "2025-09-28_16-56-14",
            "content": "@@ -1,531 +0,0 @@\n-class Carro:%0A    def __init__ (self, passager: int, gas: int, km: int):%0A        self.passager: int = 0%0A        self.gas: int = 0%0A        self.km: int = 0%0A    %0A    def __str__ (self):%0A        return f%22pass:%7Bself.passager%7D, gas:%7Bself.gas%7D, km:%7Bself.km%7D%22%0A    %0A%0Adef main ():%0A    carro: Carro = Carro(0, 0, 0)%0A    while True:%0A        line = input()%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A        print(%22$%22 + line)%0A%0A        if args %5B0%5D == %22end%22:%0A            break%0A        else:%0A            print(%22fail: comando invalido%22)%0A            \n",
            "lines": "0"
        },
        {
            "label": "2025-09-30_16-25-25",
            "content": "@@ -517,15 +517,15 @@\n %22)%0A \n-%0A\n     \n-main()\n+       \n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_16-26-05",
            "content": "@@ -458,66 +458,8 @@\n eak%0A\n-        elif args %5B0%5D == %22show%22:%0A            print(carro)%0A\n     \n",
            "lines": "23"
        },
        {
            "label": "2025-09-30_16-27-04",
            "content": "@@ -253,224 +253,8 @@\n     \n-%0A    def passMax (self, amount: int):%0A        if self.passager == %22enter%22:%0A            amount += 1%0A            if amount %3E 2:%0A                print(%22fail: limite de pessoas atingido%22)%0A                amount = 2 %0A    \n %0A%0Ade\n@@ -516,110 +516,8 @@\n ro)%0A\n-        elif args %5B0%5D == %22enter%22:%0A            amount: str = args%5B0%5D%0A            carro.passMax(amount)%0A\n     \n",
            "lines": "25"
        },
        {
            "label": "2025-09-30_16-47-27",
            "content": "@@ -890,14 +890,18 @@\n ido%22)%0A %0A\n+    \n main()\n",
            "lines": "35"
        },
        {
            "label": "2025-09-30_16-49-10",
            "content": "@@ -198,17 +198,16 @@\n  f%22pass:\n- \n %7Bself.pa\n@@ -219,17 +219,16 @@\n r%7D, gas:\n- \n %7Bself.ga\n@@ -234,17 +234,16 @@\n as%7D, km:\n- \n %7Bself.km\n",
            "lines": "35"
        },
        {
            "label": "2025-09-30_16-49-24",
            "content": "@@ -265,19 +265,34 @@\n def \n-enter (self\n+passMax (self, amount: int\n ):%0A \n@@ -290,32 +290,35 @@\n : int):%0A        \n+if \n self.passager +=\n@@ -319,12 +319,161 @@\n ger \n-+= 1\n+== %22enter%22:%0A            amount += 1%0A            if amount %3E 2:%0A                print(%22fail: limite de pessoas atingido%22)%0A                amount = 2 %0A    \n %0A%0Ade\n@@ -781,20 +781,62 @@\n     \n-carro.enter(\n+amount: str = args%5B0%5D%0A            carro.passMax(amount\n )%0A  \n",
            "lines": "35"
        },
        {
            "label": "2025-09-30_16-53-08",
            "content": "@@ -305,122 +305,8 @@\n += 1\n-%0A        if self.passager %3E 2:%0A            print(%22fail: limite de pessoas atingido%22)%0A            self.passager = 2\n %0A%0Ade\n",
            "lines": "29"
        },
        {
            "label": "2025-09-30_16-54-04",
            "content": "@@ -421,140 +421,8 @@\n  2%0A%0A\n-    def leave (self):%0A        self.passager -= 1%0A        if self.passager == 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A%0A\n def \n@@ -742,68 +742,8 @@\n r()%0A\n-        elif leave %5B0%5D == %22leave%22%0A            carro.leave()%0A\n     \n",
            "lines": "32"
        },
        {
            "label": "2025-09-30_16-58-06",
            "content": "@@ -875,36 +875,37 @@\n ()%0A        elif \n-args\n+leave\n  %5B0%5D == %22leave%22:\n@@ -903,17 +903,16 @@\n  %22leave%22\n-:\n %0A       \n",
            "lines": "39"
        },
        {
            "label": "2025-09-30_16-58-25",
            "content": "@@ -551,38 +551,8 @@\n ro%22)\n-%0A            self.passager = 0\n %0A%0Ade\n",
            "lines": "39"
        },
        {
            "label": "2025-09-30_16-59-51",
            "content": "@@ -495,9 +495,10 @@\n ger \n-%3C\n+==\n  0:%0A\n",
            "lines": "40"
        },
        {
            "label": "2025-09-30_17-01-49",
            "content": "@@ -120,19 +120,17 @@\n : int = \n-gas\n+0\n %0A       \n@@ -151,39 +151,8 @@\n = 0%0A\n-        self.gasMax: int = 100%0A\n     \n@@ -580,528 +580,8 @@\n  = 0\n-%0A    %0A    def fuel (self, increment: int) -%3E None:%0A        self.gas += increment%0A        if self.gas %3E self.gasMax:%0A            self.gas == self.gasMax%0A     %0A    def drive (self, distance: int):%0A        if self.passager == 0:%0A            print(%22fail: nao ha ningu%C3%A9m no carro%22)%0A        elif self.gas == 0:%0A            print(%22fail: tanque vazio%22)%0A        elif self.gas %3C self.km:%0A            self.km = self.gas%0A            print(f%22fail: tanque vazio apos andar %7Bdistance%7D km%22)%0A        else:%0A            self.km += distance\n %0A%0Ade\n@@ -929,24 +929,24 @@\n == %22leave%22:%0A\n+\n             \n@@ -963,226 +963,8 @@\n e()%0A\n-        elif args %5B0%5D == %22fuel%22:%0A            increment: int = int(args%5B1%5D)%0A            carro.fuel(increment)%0A        elif args %5B0%5D == %22drive%22:%0A            distance: int = int(args%5B1%5D)%0A            carro.drive(distance)%0A\n     \n",
            "lines": "40"
        },
        {
            "label": "2025-10-02_22-43-19",
            "content": "@@ -864,33 +864,33 @@\n il: nao ha ningu\n-e\n+%C3%A9\n m no carro%22)%0A   \n",
            "lines": "63"
        },
        {
            "label": "2025-10-02_22-43-42",
            "content": "@@ -1133,40 +1133,8 @@\n ance\n-%0A            self.km -= self.gas\n %0A%0Ade\n",
            "lines": "63"
        },
        {
            "label": "2025-10-02_22-44-48",
            "content": "@@ -978,24 +978,23 @@\n f.gas %3C \n-distance\n+self.km\n :%0A      \n",
            "lines": "64"
        },
        {
            "label": "2025-10-02_22-48-11",
            "content": "@@ -987,17 +987,16 @@\n istance:\n- \n %0A       \n@@ -1000,24 +1000,23 @@\n         \n-distance\n+self.km\n  = self.\n@@ -1143,32 +1143,33 @@\n         self.km \n+-\n = self.gas - sel\n@@ -1166,18 +1166,8 @@\n .gas\n- - self.km\n %0A%0Ade\n",
            "lines": "64"
        },
        {
            "label": "2025-10-02_22-51-05",
            "content": "@@ -1121,16 +1121,17 @@\n self.km \n++\n = distan\n",
            "lines": "64"
        },
        {
            "label": "2025-10-02_22-54-48",
            "content": "@@ -1091,33 +1091,8 @@\n m%22)%0A\n-            self.gas = 0%0A\n     \n@@ -1135,32 +1135,42 @@\n ance%0A           \n+ self.km =\n  self.gas -= sel\n@@ -1164,17 +1164,16 @@\n lf.gas -\n-=\n  self.km\n",
            "lines": "64"
        },
        {
            "label": "2025-10-02_22-58-40",
            "content": "@@ -1146,17 +1146,16 @@\n self.km \n-+\n = distan\n",
            "lines": "65"
        },
        {
            "label": "2025-10-02_23-02-02",
            "content": "@@ -1150,19 +1150,10 @@\n .km \n-= self.km \n +\n+=\n  dis\n",
            "lines": "65"
        },
        {
            "label": "2025-10-02_23-04-10",
            "content": "@@ -1192,20 +1192,10 @@\n gas \n-= self.gas \n -\n+=\n  sel\n",
            "lines": "65"
        },
        {
            "label": "2025-10-02_23-06-03",
            "content": "@@ -987,16 +987,17 @@\n istance:\n+ \n %0A       \n@@ -1005,79 +1005,27 @@\n     \n-self.km = self.km + distance %0A            self.gas = self.gas - self.km\n+distance = self.gas\n %0A   \n@@ -1087,16 +1087,41 @@\n e%7D km%22)%0A\n+            self.gas = 0%0A\n         \n",
            "lines": "65"
        },
        {
            "label": "2025-10-02_23-09-10",
            "content": "@@ -1014,27 +1014,27 @@\n m = \n-distance - self.gas\n+self.km + distance \n %0A   \n",
            "lines": "65"
        },
        {
            "label": "2025-10-02_23-10-37",
            "content": "@@ -1005,24 +1005,35 @@\n    self.km =\n+ distance -\n  self.gas%0A  \n",
            "lines": "65"
        },
        {
            "label": "2025-10-02_23-11-14",
            "content": "@@ -1000,24 +1000,23 @@\n         \n-distance\n+self.km\n  = self.\n",
            "lines": "65"
        },
        {
            "label": "2025-10-02_23-12-32",
            "content": "@@ -1054,24 +1054,23 @@\n f.gas - \n-distance\n+self.km\n %0A       \n@@ -1128,17 +1128,16 @@\n e%7D km%22)%0A\n-%0A\n         \n",
            "lines": "65"
        },
        {
            "label": "2025-10-02_23-13-48",
            "content": "@@ -1,1891 +1,221 @@\n-class Carro:%0A    def __init__ (self, passager: int, gas: int, km: int):%0A        self.passager: int = 0%0A        self.gas: int = gas%0A        self.km: int = 0%0A        self.gasMax: int = 100%0A    %0A    def __str__ (self):%0A        return f%22pass: %7Bself.passager%7D, gas: %7Bself.gas%7D, km: %7Bself.km%7D%22%0A    %0A    def enter (self):%0A        self.passager += 1%0A        if self.passager %3E 2:%0A            print(%22fail: limite de pessoas atingido%22)%0A            self.passager = 2%0A%0A    def leave (self):%0A        self.passager -= 1%0A        if self.passager %3C 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A            self.passager = 0%0A    %0A    def fuel (self, increment: int) -%3E None:%0A        self.gas += increment%0A        if self.gas %3E self.gasMax:%0A            self.gas == self.gasMax%0A     %0A    def drive (self, distance: int):%0A        if self.passager == 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A        elif self.gas == 0:%0A            print(%22fail: tanque vazio%22)%0A        elif self.gas %3C distance:%0A            distance = self.gas%0A            self.gas = self.gas - distance%0A            print(f%22fail: tanque vazio apos andar %7Bdistance%7D km%22)%0A%0A        else:%0A            self.km += distance%0A            self.gas = self.gas - self.km%0A%0Adef main ():%0A    carro: Carro = Carro(0, 0, 0)%0A    while True:%0A        line = input()%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A        print(%22$%22 + line)%0A%0A        if args %5B0%5D == %22end%22:%0A            break%0A        elif args %5B0%5D == %22show%22:%0A            print(carro)%0A        elif args %5B0%5D == %22enter%22:%0A            carro.enter()%0A        elif args %5B0%5D == %22leave%22:%0A            carro.leave()%0A        elif args %5B0%5D == %22fuel%22:%0A            increment: int = int(args%5B1%5D)%0A            carro.fuel(increment)%0A        elif args %5B0%5D == %22drive%22:%0A            distance: int = int(args%5B1%5D)%0A            carro.drive(distance)%0A        else:%0A            print(%22fail: comando invalido%22)%0A %0Amain()\n+@@ -1157,35 +1157,34 @@%0A        self.%0A-gas%0A+km%0A  = self.%0A gas - self.k%0A@@ -1175,21 +1175,21 @@%0A elf.%0A-gas - self.km%0A+km + distance%0A %250A   %0A@@ -1206,22 +1206,32 @@%0A elf.%0A-km += distance%0A+gas = self.gas - self.km%0A %250A%250Ade%0A\n",
            "lines": "16"
        },
        {
            "label": "2025-10-02_23-17-58",
            "content": "@@ -1000,25 +1000,25 @@\n         \n-self.km +\n+distance \n = self.g\n",
            "lines": "66"
        },
        {
            "label": "2025-10-02_23-19-30",
            "content": "@@ -971,27 +971,27 @@\n lif \n-distance %3E self.gas\n+self.gas %3C distance\n :%0A  \n@@ -1114,23 +1114,24 @@\n  andar %7B\n-self.km\n+distance\n %7D km%22)%0A%0A\n",
            "lines": "66"
        },
        {
            "label": "2025-10-02_23-22-41",
            "content": "@@ -1119,19 +1119,18 @@\n r %7Bself.\n-gas\n+km\n %7D km%22)%0A%0A\n",
            "lines": "66"
        },
        {
            "label": "2025-10-02_23-22-57",
            "content": "@@ -1016,24 +1016,67 @@\n += self.gas%0A\n+            self.gas = self.gas - distance%0A\n             \n@@ -1133,32 +1133,8 @@\n m%22)%0A\n-            self.gas = 0\n %0A   \n",
            "lines": "66"
        },
        {
            "label": "2025-10-02_23-23-44",
            "content": "@@ -1125,69 +1125,11 @@\n   el\n-if self.gas %3E self.gasMax:%0A            self.gas = self.gasMax\n+se:\n %0A   \n",
            "lines": "65"
        },
        {
            "label": "2025-10-02_23-27-16",
            "content": "@@ -1113,35 +1113,93 @@\n s = 0%0A        el\n-se:\n+if self.gas %3E self.gasMax:%0A            self.gas = self.gasMax\n %0A            sel\n",
            "lines": "66"
        },
        {
            "label": "2025-10-02_23-28-02",
            "content": "@@ -646,24 +646,32 @@\n rement: int)\n+ -%3E None\n :%0A        se\n",
            "lines": "65"
        },
        {
            "label": "2025-10-02_23-28-43",
            "content": "@@ -644,32 +644,62 @@\n ncrement: int):%0A\n+        self.gas += increment%0A\n         if self.\n@@ -757,56 +757,8 @@\n Max%0A\n-        else:%0A            self.gas += increment%0A\n     \n",
            "lines": "65"
        },
        {
            "label": "2025-10-02_23-29-30",
            "content": "@@ -663,25 +663,24 @@\n      if \n-increment\n+self.gas\n  %3E self.\n",
            "lines": "66"
        },
        {
            "label": "2025-10-02_23-29-59",
            "content": "@@ -702,32 +702,33 @@\n       self.gas =\n+=\n  self.gasMax%0A   \n",
            "lines": "66"
        },
        {
            "label": "2025-10-02_23-30-24",
            "content": "class Carro:\n    def __init__ (self, passager: int, gas: int, km: int):\n        self.passager: int = 0\n        self.gas: int = gas\n        self.km: int = 0\n        self.gasMax: int = 100\n    \n    def __str__ (self):\n        return f\"pass: {self.passager}, gas: {self.gas}, km: {self.km}\"\n    \n    def enter (self):\n        self.passager += 1\n        if self.passager > 2:\n            print(\"fail: limite de pessoas atingido\")\n            self.passager = 2\n\n    def leave (self):\n        self.passager -= 1\n        if self.passager < 0:\n            print(\"fail: nao ha ninguem no carro\")\n            self.passager = 0\n    \n    def fuel (self, increment: int):\n        if increment > self.gasMax:\n            self.gas = self.gasMax\n        else:\n            self.gas += increment\n     \n    def drive (self, distance: int):\n        if self.passager == 0:\n            print(\"fail: nao ha ninguem no carro\")\n        elif self.gas == 0:\n            print(\"fail: tanque vazio\")\n        elif distance > self.gas:\n            self.km += self.gas\n            print(f\"fail: tanque vazio apos andar {self.gas} km\")\n            self.gas = 0\n        else:\n            self.km += distance\n            self.gas = self.gas - self.km\n\ndef main ():\n    carro: Carro = Carro(0, 0, 0)\n    while True:\n        line = input()\n        args: list[str] = line.split(\" \")\n        print(\"$\" + line)\n\n        if args [0] == \"end\":\n            break\n        elif args [0] == \"show\":\n            print(carro)\n        elif args [0] == \"enter\":\n            carro.enter()\n        elif args [0] == \"leave\":\n            carro.leave()\n        elif args [0] == \"fuel\":\n            increment: int = int(args[1])\n            carro.fuel(increment)\n        elif args [0] == \"drive\":\n            distance: int = int(args[1])\n            carro.drive(distance)\n        else:\n            print(\"fail: comando invalido\")\n \nmain()",
            "lines": "66"
        }
    ]
}