{
    "patches": [
        {
            "label": "2025-09-28_16-56-14",
            "content": "@@ -1,531 +0,0 @@\n-class Carro:%0A    def __init__ (self, passager: int, gas: int, km: int):%0A        self.passager: int = 0%0A        self.gas: int = 0%0A        self.km: int = 0%0A    %0A    def __str__ (self):%0A        return f%22pass:%7Bself.passager%7D, gas:%7Bself.gas%7D, km:%7Bself.km%7D%22%0A    %0A%0Adef main ():%0A    carro: Carro = Carro(0, 0, 0)%0A    while True:%0A        line = input()%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A        print(%22$%22 + line)%0A%0A        if args %5B0%5D == %22end%22:%0A            break%0A        else:%0A            print(%22fail: comando invalido%22)%0A            \n",
            "lines": "0"
        },
        {
            "label": "2025-09-30_16-25-25",
            "content": "@@ -517,15 +517,15 @@\n %22)%0A \n-%0A\n     \n-main()\n+       \n",
            "lines": "22"
        },
        {
            "label": "2025-09-30_16-26-05",
            "content": "@@ -458,66 +458,8 @@\n eak%0A\n-        elif args %5B0%5D == %22show%22:%0A            print(carro)%0A\n     \n",
            "lines": "23"
        },
        {
            "label": "2025-09-30_16-27-04",
            "content": "@@ -253,224 +253,8 @@\n     \n-%0A    def passMax (self, amount: int):%0A        if self.passager == %22enter%22:%0A            amount += 1%0A            if amount %3E 2:%0A                print(%22fail: limite de pessoas atingido%22)%0A                amount = 2 %0A    \n %0A%0Ade\n@@ -516,110 +516,8 @@\n ro)%0A\n-        elif args %5B0%5D == %22enter%22:%0A            amount: str = args%5B0%5D%0A            carro.passMax(amount)%0A\n     \n",
            "lines": "25"
        },
        {
            "label": "2025-09-30_16-47-27",
            "content": "@@ -890,14 +890,18 @@\n ido%22)%0A %0A\n+    \n main()\n",
            "lines": "35"
        },
        {
            "label": "2025-09-30_16-49-10",
            "content": "@@ -198,17 +198,16 @@\n  f%22pass:\n- \n %7Bself.pa\n@@ -219,17 +219,16 @@\n r%7D, gas:\n- \n %7Bself.ga\n@@ -234,17 +234,16 @@\n as%7D, km:\n- \n %7Bself.km\n",
            "lines": "35"
        },
        {
            "label": "2025-09-30_16-49-24",
            "content": "@@ -265,19 +265,34 @@\n def \n-enter (self\n+passMax (self, amount: int\n ):%0A \n@@ -290,32 +290,35 @@\n : int):%0A        \n+if \n self.passager +=\n@@ -319,12 +319,161 @@\n ger \n-+= 1\n+== %22enter%22:%0A            amount += 1%0A            if amount %3E 2:%0A                print(%22fail: limite de pessoas atingido%22)%0A                amount = 2 %0A    \n %0A%0Ade\n@@ -781,20 +781,62 @@\n     \n-carro.enter(\n+amount: str = args%5B0%5D%0A            carro.passMax(amount\n )%0A  \n",
            "lines": "35"
        },
        {
            "label": "2025-09-30_16-53-08",
            "content": "@@ -305,122 +305,8 @@\n += 1\n-%0A        if self.passager %3E 2:%0A            print(%22fail: limite de pessoas atingido%22)%0A            self.passager = 2\n %0A%0Ade\n",
            "lines": "29"
        },
        {
            "label": "2025-09-30_16-54-04",
            "content": "@@ -421,140 +421,8 @@\n  2%0A%0A\n-    def leave (self):%0A        self.passager -= 1%0A        if self.passager == 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A%0A\n def \n@@ -742,68 +742,8 @@\n r()%0A\n-        elif leave %5B0%5D == %22leave%22%0A            carro.leave()%0A\n     \n",
            "lines": "32"
        },
        {
            "label": "2025-09-30_16-58-06",
            "content": "@@ -875,36 +875,37 @@\n ()%0A        elif \n-args\n+leave\n  %5B0%5D == %22leave%22:\n@@ -903,17 +903,16 @@\n  %22leave%22\n-:\n %0A       \n",
            "lines": "39"
        },
        {
            "label": "2025-09-30_16-58-25",
            "content": "@@ -551,38 +551,8 @@\n ro%22)\n-%0A            self.passager = 0\n %0A%0Ade\n",
            "lines": "39"
        },
        {
            "label": "2025-09-30_16-59-51",
            "content": "@@ -495,9 +495,10 @@\n ger \n-%3C\n+==\n  0:%0A\n",
            "lines": "40"
        },
        {
            "label": "2025-09-30_17-01-49",
            "content": "class Carro:\n    def __init__ (self, passager: int, gas: int, km: int):\n        self.passager: int = 0\n        self.gas: int = 0\n        self.km: int = 0\n    \n    def __str__ (self):\n        return f\"pass: {self.passager}, gas: {self.gas}, km: {self.km}\"\n    \n    def enter (self):\n        self.passager += 1\n        if self.passager > 2:\n            print(\"fail: limite de pessoas atingido\")\n            self.passager = 2\n\n    def leave (self):\n        self.passager -= 1\n        if self.passager < 0:\n            print(\"fail: nao ha ninguem no carro\")\n            self.passager = 0\n\ndef main ():\n    carro: Carro = Carro(0, 0, 0)\n    while True:\n        line = input()\n        args: list[str] = line.split(\" \")\n        print(\"$\" + line)\n\n        if args [0] == \"end\":\n            break\n        elif args [0] == \"show\":\n            print(carro)\n        elif args [0] == \"enter\":\n            carro.enter()\n        elif args [0] == \"leave\":\n            carro.leave()\n        else:\n            print(\"fail: comando invalido\")\n \nmain()",
            "lines": "40"
        }
    ]
}