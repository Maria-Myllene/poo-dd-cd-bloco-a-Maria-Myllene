{
    "patches": [
        {
            "label": "2025-10-05_01-19-51",
            "content": "@@ -180,16 +180,20 @@\n t = 100%0A\n+    \n %0A    def\n@@ -445,16 +445,24 @@\n ger = 2%0A\n+        \n %0A    def\n@@ -1871,20 +1871,16 @@\n alido%22)%0A\n-    \n %0A    mai\n",
            "lines": "66"
        },
        {
            "label": "2025-10-05_01-24-19",
            "content": "@@ -282,267 +282,1587 @@\n %7D%22%0A%0A\n-def main ():%0A    carro: Carro = Carro(0, 0, 0)%0A    while True:%0A        line = input()%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A        print(%22$%22 + line)%0A%0A        if args %5B0%5D == %22end%22:%0A            break%0A        elif args %5B0%5D == %22show%22:%0A            print(carro\n+    def enter (self):%0A        self.passager += 1%0A        if self.passager %3E 2:%0A            print(%22fail: limite de pessoas atingido%22)%0A            self.passager = 2%0A%0A    def leave (self):%0A        self.passager -= 1%0A        if self.passager %3C 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A            self.passager = 0%0A    %0A    def fuel (self, increment: int):%0A        if increment %3E self.gasMax:%0A            self.gas = self.gasMax%0A        else:%0A            self.gas += increment%0A     %0A    def drive (self, distance: int):%0A        if self.passager == 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A        elif self.gas == 0:%0A            print(%22fail: tanque vazio%22)%0A        elif distance %3E self.gas:%0A            self.km += self.gas%0A            print(f%22fail: tanque vazio apos andar %7Bself.gas%7D km%22)%0A            self.gas = 0%0A        else:%0A            self.km += distance%0A            self.gas = self.gas - self.km%0A%0Adef main ():%0A    carro: Carro = Carro(0, 0, 0)%0A    while True:%0A        line = input()%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A        print(%22$%22 + line)%0A%0A        if args %5B0%5D == %22end%22:%0A            break%0A        elif args %5B0%5D == %22show%22:%0A            print(carro)%0A        elif args %5B0%5D == %22enter%22:%0A            carro.enter()%0A        elif args %5B0%5D == %22leave%22:%0A            carro.leave()%0A        elif args %5B0%5D == %22fuel%22:%0A            increment: int = int(args%5B1%5D)%0A            carro.fuel(increment)%0A        elif args %5B0%5D == %22drive%22:%0A            distance: int = int(args%5B1%5D)%0A            carro.drive(distance)%0A        else:%0A            print(%22fail: comando invalido%22\n )%0A  \n",
            "lines": "66"
        },
        {
            "label": "2025-10-05_19-33-43",
            "content": "@@ -0,0 +1,561 @@\n+class Carro:%0A    def __init__ (self, passager: int, gas: int, km: int):%0A        self.passager: int = 0%0A        self.gas: int = gas%0A        self.km: int = 0%0A        self.gasMax: int = 100%0A%0A    def __str__ (self):%0A        return f%22pass: %7Bself.passager%7D, gas: %7Bself.gas%7D, km: %7Bself.km%7D%22%0A%0Adef main ():%0A    carro: Carro = Carro(0, 0, 0)%0A    while True:%0A        line = input()%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A        print(%22$%22 + line)%0A%0A        if args %5B0%5D == %22end%22:%0A            break%0A        elif args %5B0%5D == %22show%22:%0A            print(carro)%0A    %0A    main()\n",
            "lines": "23"
        },
        {
            "label": "2025-10-05_19-38-41",
            "content": "@@ -1,1886 +0,0 @@\n-class Carro:%0A    def __init__ (self, passager: int, gas: int, km: int):%0A        self.passenger: int = 0%0A        self.gas: int = gas%0A        self.km: int = 0%0A        self.gasMax: int = 100%0A%0A%0A    def __str__ (self):%0A        return f%22pass: %7Bself.passager%7D, gas: %7Bself.gas%7D, km: %7Bself.km%7D%22%0A%0A%0A    def enter (self):%0A        self.passager += 1%0A        if self.passager %3E 2:%0A            print(%22fail: limite de pessoas atingido%22)%0A            self.passager = 2%0A%0A%0A    def leave (self):%0A        self.passager -= 1%0A        if self.passager %3C 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A            self.passager = 0%0A   %0A    def fuel (self, increment: int):%0A        if increment %3E self.gasMax:%0A            self.gas = self.gasMax%0A        else:%0A            self.gas += increment%0A     %0A    def drive (self, distance: int):%0A        if self.passager == 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A        elif self.gas == 0:%0A            print(%22fail: tanque vazio%22)%0A        elif distance %3E self.gas:%0A            self.km += self.gas%0A            print(f%22fail: tanque vazio apos andar %7Bself.gas%7D km%22)%0A            self.gas = 0%0A        else:%0A            self.km += distance%0A            self.gas = self.gas - self.km%0A%0A%0Adef main ():%0A    carro: Carro = Carro(0, 0, 0)%0A    while True:%0A        line = input()%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A        print(%22$%22 + line)%0A%0A%0A        if args %5B0%5D == %22end%22:%0A            break%0A        elif args %5B0%5D == %22show%22:%0A            print(carro)%0A        elif args %5B0%5D == %22enter%22:%0A            carro.enter()%0A        elif args %5B0%5D == %22leave%22:%0A            carro.leave()%0A        elif args %5B0%5D == %22fuel%22:%0A            increment: int = int(args%5B1%5D)%0A            carro.fuel(increment)%0A        elif args %5B0%5D == %22drive%22:%0A            distance: int = int(args%5B1%5D)%0A            carro.drive(distance)%0A        else:%0A            print(%22fail: comando invalido%22)%0A   %0A    main()%0A\n",
            "lines": "0"
        },
        {
            "label": "2025-10-05_19-45-22",
            "content": "@@ -2,16 +2,18 @@\n lass Car\n+ro\n :%0A    de\n@@ -33,16 +33,21 @@\n elf, pas\n+sager\n : int, g\n@@ -77,24 +77,35 @@\n     self.pas\n+senger: int\n  = 0%0A       \n@@ -105,36 +105,43 @@\n         self.gas\n- = 0\n+: int = gas\n %0A        self.km\n@@ -140,16 +140,21 @@\n  self.km\n+: int\n  = 0%0A   \n@@ -173,34 +173,13 @@\n sMax\n- = 100%0A        self.pasMax\n+: int\n  = 1\n@@ -239,16 +239,21 @@\n self.pas\n+sager\n %7D, gas: \n@@ -279,19 +279,17 @@\n lf.km%7D%22%0A\n-   \n+%0A\n %0A    def\n@@ -319,16 +319,21 @@\n self.pas\n+sager\n  += 1%0A  \n@@ -349,16 +349,21 @@\n self.pas\n+sager\n  %3E 2:%0A  \n@@ -369,33 +369,32 @@\n            print\n- \n (%22fail: limite d\n@@ -434,16 +434,21 @@\n self.pas\n+sager\n  = 2%0A%0A%0A \n@@ -484,16 +484,21 @@\n self.pas\n+sager\n  -= 1%0A  \n@@ -514,16 +514,21 @@\n self.pas\n+sager\n  %3C 0:%0A  \n@@ -534,33 +534,32 @@\n            print\n- \n (%22fail: nao ha n\n@@ -600,14 +600,21 @@\n .pas\n+sager\n  = 0%0A\n-%0A\n+   \n %0A   \n@@ -659,29 +659,35 @@\n     \n-self.gas += increment\n+if increment %3E self.gasMax:\n %0A   \n@@ -687,26 +687,27 @@\n ax:%0A        \n-if\n+   \n  self.gas %3E \n@@ -704,17 +704,17 @@\n elf.gas \n-%3E\n+=\n  self.ga\n@@ -709,32 +709,45 @@\n as = self.gasMax\n+%0A        else\n :%0A            se\n@@ -757,16 +757,21 @@\n gas \n++\n = \n-100%0A  \n+increment%0A\n     \n@@ -828,16 +828,21 @@\n self.pas\n+sager\n  == 0:%0A \n@@ -849,33 +849,32 @@\n            print\n- \n (%22fail: nao ha n\n@@ -928,33 +928,32 @@\n            print\n- \n (%22fail: tanque v\n@@ -1009,18 +1009,17 @@\n     \n-distancia \n+self.km +\n = se\n@@ -1042,17 +1042,16 @@\n    print\n- \n (f%22fail:\n@@ -1076,25 +1076,24 @@\n  andar %7B\n-distancia\n+self.gas\n %7D km%22)%0A \n@@ -1120,41 +1120,8 @@\n = 0%0A\n-            self.km += distancia%0A\n     \n@@ -1187,33 +1187,28 @@\n gas \n--\n = \n-distance%0A%0A%0A           \n+self.gas - self.km\n %0A%0A%0Ad\n@@ -1214,16 +1214,17 @@\n def main\n+ \n ():%0A    \n@@ -1232,26 +1232,31 @@\n arro\n- = Car (%22%22, %22%22, %22%22\n+: Carro = Carro(0, 0, 0\n )%0A  \n@@ -1347,17 +1347,16 @@\n    print\n- \n (%22$%22 + l\n@@ -1360,16 +1360,18 @@\n + line)%0A\n+%0A%0A\n         \n@@ -1373,24 +1373,25 @@\n      if args\n+ \n %5B0%5D == %22end%22\n@@ -1419,32 +1419,33 @@\n        elif args\n+ \n %5B0%5D == %22show%22:%0A \n@@ -1477,32 +1477,33 @@\n        elif args\n+ \n %5B0%5D == %22enter%22:%0A\n@@ -1537,32 +1537,33 @@\n        elif args\n+ \n %5B0%5D == %22leave%22:%0A\n@@ -1597,32 +1597,33 @@\n        elif args\n+ \n %5B0%5D == %22fuel%22:%0A \n@@ -1714,16 +1714,17 @@\n lif args\n+ \n %5B0%5D == %22\n@@ -1837,17 +1837,16 @@\n    print\n- \n (%22fail: \n@@ -1860,21 +1860,27 @@\n  inv\n-%C3%A1\n+a\n lido%22)%0A\n-%0A\n+   %0A    \n main()%0A\n-%0A\n",
            "lines": "71"
        },
        {
            "label": "2025-10-05_20-07-12",
            "content": "@@ -2,18 +2,16 @@\n lass Car\n-ro\n :%0A    de\n@@ -31,21 +31,16 @@\n elf, pas\n-sager\n : int, g\n@@ -78,19 +78,8 @@\n .pas\n-senger: int\n  = 0\n@@ -99,19 +99,12 @@\n .gas\n-: int = gas\n+ = 0\n %0A   \n@@ -115,21 +115,16 @@\n  self.km\n-: int\n  = 0%0A   \n@@ -139,21 +139,42 @@\n f.gasMax\n-: int\n+ = 100%0A        self.pasMax\n  = 100%0A%0A\n@@ -230,21 +230,16 @@\n self.pas\n-sager\n %7D, gas: \n@@ -265,17 +265,19 @@\n lf.km%7D%22%0A\n-%0A\n+   \n %0A    def\n@@ -307,21 +307,16 @@\n self.pas\n-sager\n  += 1%0A  \n@@ -332,21 +332,16 @@\n self.pas\n-sager\n  %3E 2:%0A  \n@@ -347,32 +347,33 @@\n            print\n+ \n (%22fail: limite d\n@@ -413,21 +413,16 @@\n self.pas\n-sager\n  = 2%0A%0A%0A \n@@ -458,21 +458,16 @@\n self.pas\n-sager\n  -= 1%0A  \n@@ -483,21 +483,16 @@\n self.pas\n-sager\n  %3C 0:%0A  \n@@ -498,32 +498,33 @@\n            print\n+ \n (%22fail: nao ha n\n@@ -565,21 +565,14 @@\n .pas\n-sager\n  = 0%0A\n-   \n+%0A\n %0A   \n@@ -617,35 +617,29 @@\n     \n-if increment %3E self.gasMax:\n+self.gas += increment\n %0A   \n@@ -635,35 +635,34 @@\n crement%0A        \n-   \n+if\n  self.gas = self\n@@ -647,33 +647,33 @@\n     if self.gas \n-=\n+%3E\n  self.gasMax%0A   \n@@ -668,29 +668,16 @@\n f.gasMax\n-%0A        else\n :%0A      \n@@ -687,37 +687,32 @@\n    self.gas \n-+\n = \n-increment%0A\n+100%0A  \n      %0A    de\n@@ -765,13 +765,8 @@\n .pas\n-sager\n  == \n@@ -777,32 +777,33 @@\n            print\n+ \n (%22fail: nao ha n\n@@ -857,32 +857,33 @@\n            print\n+ \n (%22fail: tanque v\n@@ -935,25 +935,26 @@\n         \n-self.km +\n+distancia \n = self.g\n@@ -973,16 +973,17 @@\n    print\n+ \n (f%22fail:\n@@ -1008,24 +1008,25 @@\n  andar %7B\n-self.gas\n+distancia\n %7D km%22)%0A \n@@ -1041,32 +1041,65 @@\n    self.gas = 0%0A\n+            self.km += distancia%0A\n         else:%0A  \n@@ -1153,28 +1153,33 @@\n gas \n+-\n = \n-self.gas - self.km\n+distance%0A%0A%0A           \n %0A%0A%0Ad\n@@ -1185,17 +1185,16 @@\n def main\n- \n ():%0A    \n@@ -1202,31 +1202,26 @@\n arro\n-: Carro = Carro(0, 0, 0\n+ = Car (%22%22, %22%22, %22%22\n )%0A  \n@@ -1312,16 +1312,17 @@\n    print\n+ \n (%22$%22 + l\n@@ -1326,18 +1326,16 @@\n + line)%0A\n-%0A%0A\n         \n@@ -1337,25 +1337,24 @@\n      if args\n- \n %5B0%5D == %22end%22\n@@ -1382,33 +1382,32 @@\n        elif args\n- \n %5B0%5D == %22show%22:%0A \n@@ -1439,33 +1439,32 @@\n        elif args\n- \n %5B0%5D == %22enter%22:%0A\n@@ -1498,33 +1498,32 @@\n        elif args\n- \n %5B0%5D == %22leave%22:%0A\n@@ -1557,33 +1557,32 @@\n        elif args\n- \n %5B0%5D == %22fuel%22:%0A \n@@ -1673,17 +1673,16 @@\n lif args\n- \n %5B0%5D == %22\n@@ -1795,16 +1795,17 @@\n    print\n+ \n (%22fail: \n@@ -1819,19 +1819,16 @@\n  inv\n-a\n+%C3%A1\n lido%22)%0A\n-   \n %0Amai\n",
            "lines": "74"
        },
        {
            "label": "2025-10-05_20-08-50",
            "content": "@@ -78,25 +78,26 @@\n    self.pass\n-a\n+en\n ger: int = 0\n@@ -1361,16 +1361,17 @@\n  line)%0A%0A\n+%0A\n         \n",
            "lines": "72"
        },
        {
            "label": "2025-10-05_20-10-22",
            "content": "@@ -284,273 +284,1531 @@\n %22%0A%0A%0A\n-def main ():%0A    carro: Carro = Carro(0, 0, 0)%0A    while True:%0A        line = input()%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A        print(%22$%22 + line)%0A%0A        if args %5B0%5D == %22end%22:%0A            break%0A        elif args %5B0%5D == %22show%22:%0A            print(carro)%0A    \n+    def enter (self):%0A        self.passager += 1%0A        if self.passager %3E 2:%0A            print(%22fail: limite de pessoas atingido%22)%0A            self.passager = 2%0A%0A%0A    def leave (self):%0A        self.passager -= 1%0A        if self.passager %3C 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A            self.passager = 0%0A   %0A    def fuel (self, increment: int):%0A        if increment %3E self.gasMax:%0A            self.gas = self.gasMax%0A        else:%0A            self.gas += increment%0A     %0A    def drive (self, distance: int):%0A        if self.passager == 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A        elif self.gas == 0:%0A            print(%22fail: tanque vazio%22)%0A        elif distance %3E self.gas:%0A            self.km += self.gas%0A            print(f%22fail: tanque vazio apos andar %7Bself.gas%7D km%22)%0A            self.gas = 0%0A        else:%0A            self.km += distance%0A            self.gas = self.gas - self.km%0A%0A%0Adef main ():%0A    carro: Carro = Carro(0, 0, 0)%0A    while True:%0A        line = input()%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A        print(%22$%22 + line)%0A%0A        if args %5B0%5D == %22end%22:%0A            break%0A        elif args %5B0%5D == %22show%22:%0A            print(carro)%0A        elif args %5B0%5D == %22enter%22:%0A            carro.enter()%0A        elif args %5B0%5D == %22leave%22:%0A            carro.leave()%0A        elif args %5B0%5D == %22fuel%22:%0A            increment: int = int(args%5B1%5D)%0A            carro.fuel(increment)%0A        elif args %5B0%5D == %22drive%22:%0A            distance: int = int(args%5B1%5D)%0A            carro.drive(distance)\n %0A   \n",
            "lines": "71"
        },
        {
            "label": "2025-10-05_20-14-01",
            "content": "@@ -283,176 +283,8 @@\n %7D%22%0A%0A\n-    def enter (self):%0A        self.passager += 1%0A        if self.passager %3E 2:%0A            print(%22fail: limite de pessoas atingido%22)%0A            self.passager = 2%0A%0A    \n %0Adef\n@@ -549,63 +549,8 @@\n     \n-    elif args %5B0%5D == %22enter%22:%0A            carro.enter()\n %0A   \n",
            "lines": "29"
        },
        {
            "label": "2025-10-05_20-15-26",
            "content": "@@ -773,68 +773,8 @@\n r()%0A\n-        elif args %5B0%5D == %22leave%22:%0A            carro.leave()%0A\n     \n",
            "lines": "36"
        },
        {
            "label": "2025-10-05_20-15-45",
            "content": "@@ -446,186 +446,8 @@\n = 2%0A\n-            %0A    def leave (self):%0A        self.passager -= 1%0A        if self.passager %3C 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A            self.passager = 0%0A   %0A%0A\n %0A   \n",
            "lines": "38"
        },
        {
            "label": "2025-10-05_20-16-13",
            "content": "@@ -442,17 +442,29 @@\n ger = 2%0A\n+            \n %0A\n-\n     def \n@@ -623,164 +623,9 @@\n    %0A\n-    def fuel (self, increment: int):%0A        if increment %3E self.gasMax:%0A            self.gas = self.gasMax%0A        else:%0A            self.gas += increment\n %0A\n+\n %0A   \n@@ -981,16 +981,16 @@\n leave%22:%0A\n+\n         \n@@ -1011,117 +1011,8 @@\n e()%0A\n-        elif args %5B0%5D == %22fuel%22:%0A            increment: int = int(args%5B1%5D)%0A            carro.fuel(increment)%0A\n     \n",
            "lines": "46"
        },
        {
            "label": "2025-10-05_20-16-55",
            "content": "@@ -766,440 +766,8 @@\n ment\n-%0A    def drive (self, distance: int):%0A        if self.passager == 0:%0A            print(%22fail: nao ha ninguem no carro%22)%0A        elif self.gas == 0:%0A            print(%22fail: tanque vazio%22)%0A        elif distance %3E self.gas:%0A            self.km += self.gas%0A            print(f%22fail: tanque vazio apos andar %7Bself.gas%7D km%22)%0A            self.gas = 0%0A        else:%0A            self.km += distance%0A            self.gas = self.gas - self.km\n %0A%0A  \n@@ -1263,118 +1263,8 @@\n nt)%0A\n-        elif args %5B0%5D == %22drive%22:%0A            distance: int = int(args%5B1%5D)%0A            carro.drive(distance)%0A%0A\n     \n",
            "lines": "53"
        },
        {
            "label": "2025-10-05_20-17-31",
            "content": "class Carro:\n    def __init__ (self, passager: int, gas: int, km: int):\n        self.passager: int = 0\n        self.gas: int = gas\n        self.km: int = 0\n        self.gasMax: int = 100\n\n\n    def __str__ (self):\n        return f\"pass: {self.passager}, gas: {self.gas}, km: {self.km}\"\n\n    def enter (self):\n        self.passager += 1\n        if self.passager > 2:\n            print(\"fail: limite de pessoas atingido\")\n            self.passager = 2\n\n    def leave (self):\n        self.passager -= 1\n        if self.passager < 0:\n            print(\"fail: nao ha ninguem no carro\")\n            self.passager = 0\n   \n    def fuel (self, increment: int):\n        if increment > self.gasMax:\n            self.gas = self.gasMax\n        else:\n            self.gas += increment\n    def drive (self, distance: int):\n        if self.passager == 0:\n            print(\"fail: nao ha ninguem no carro\")\n        elif self.gas == 0:\n            print(\"fail: tanque vazio\")\n        elif distance > self.gas:\n            self.km += self.gas\n            print(f\"fail: tanque vazio apos andar {self.gas} km\")\n            self.gas = 0\n        else:\n            self.km += distance\n            self.gas = self.gas - self.km\n\n    \ndef main ():\n    carro: Carro = Carro(0, 0, 0)\n    while True:\n        line = input()\n        args: list[str] = line.split(\" \")\n        print(\"$\" + line)\n\n        if args [0] == \"end\":\n            break\n        elif args [0] == \"show\":\n            print(carro)\n        elif args [0] == \"enter\":\n            carro.enter()\n        elif args [0] == \"leave\":\n            carro.leave()\n        elif args [0] == \"fuel\":\n            increment: int = int(args[1])\n            carro.fuel(increment)\n        elif args [0] == \"drive\":\n            distance: int = int(args[1])\n            carro.drive(distance)\n\n        else:\n            print(\"fail: comando invalido\")\n   \nmain()\n\n",
            "lines": "69"
        }
    ]
}